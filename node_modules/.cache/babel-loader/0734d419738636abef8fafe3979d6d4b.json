{"ast":null,"code":"import _classCallCheck from \"/Users/-balder/drifting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/-balder/drifting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/-balder/drifting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/-balder/drifting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/-balder/drifting/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/-balder/drifting/src/ForumSubmission.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Button, Form, FormControl } from 'react-bootstrap';\n\nvar ForumSubmission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForumSubmission, _Component);\n\n  // Set up a blank title and description input field\n  function ForumSubmission(props) {\n    var _this;\n\n    _classCallCheck(this, ForumSubmission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForumSubmission).call(this, props));\n    _this.state = {\n      mood: \"\",\n      body: \"\",\n      type: \"\",\n      tags: \"\"\n    }; //this.handleChange = this.handleChange.bind(this);\n    //this.postBottle = this.postBottle.bind(this);\n\n    return _this;\n  } // Add a method to handle changes to any input element\n\n\n  _createClass(ForumSubmission, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var field = event.target.name;\n      var value = event.target.value;\n      console.log(field, value);\n      var change = {};\n      change[field] = value;\n      this.setState(change);\n    } // When the user click submit, the value change on title and description \n    //onSubmit = e => {\n    //    e.preventDefault();\n    //    this.props.onSubmit(this.state);\n    //    this.setState({\n    //        title: \"\",\n    //        description: \"\"\n    //    })\n    //};\n\n  }, {\n    key: \"addBottle\",\n    value: function addBottle() {\n      var _this2 = this;\n\n      console.log(this.state.type);\n      var bottle = {\n        mood: this.state.mood,\n        body: this.state.body,\n        type: this.state.type,\n        tags: this.state.tags\n      };\n      console.log(\"bottle\", bottle); //this.cardsRef.push(card);\n\n      this.setState({\n        mood: \"\",\n        body: \"\",\n        type: \"\",\n        tags: \"\"\n      }, function () {\n        console.log(\"empty1\", _this2.state);\n      });\n    }\n  }, {\n    key: \"clearState\",\n    value: function clearState() {\n      var _this3 = this;\n\n      this.setState({\n        mood: \"\",\n        body: \"\",\n        type: \"\",\n        tags: \"\"\n      }, function () {\n        console.log(\"empty\", _this3.state);\n      });\n    }\n  }, {\n    key: \"postBottle\",\n    value: function postBottle() {\n      var _this4 = this;\n\n      //this.setState({type: \"public\"});\n      this.setState({\n        mood: \"aaaaa\",\n        type: \"public\"\n      }, function () {\n        console.log(\"post\", _this4.state);\n      });\n      this.addBottle();\n      this.clearState();\n    }\n  }, {\n    key: \"saveBottle\",\n    value: function saveBottle() {\n      this.setState({\n        type: \"private\"\n      });\n      console.log(this.state.type);\n      this.addBottle();\n      this.clearState();\n    }\n  }, {\n    key: \"disposeBottle\",\n    value: function disposeBottle() {\n      this.clearState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Create a New Bottle\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"How are you feeling right now?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"mood\",\n        value: \"happy\",\n        checked: this.state.mood === \"happy\",\n        onChange: function onChange(event) {\n          _this5.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), \"Happy\")), React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"mood\",\n        value: \"bad\",\n        checked: this.state.mood === \"bad\",\n        onChange: function onChange(event) {\n          _this5.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), \"Bad\")), React.createElement(\"div\", {\n        className: \"radio\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"mood\",\n        value: \"awful\",\n        checked: this.state.mood === \"awful\",\n        onChange: function onChange(event) {\n          _this5.handleChange(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"Awful\")), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exampleFormControlTextarea1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Emotional Processing\"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        name: \"body\",\n        value: this.state.body,\n        onChange: function onChange(event) {\n          _this5.handleChange(event);\n        },\n        id: \"exampleFormControlTextarea1\",\n        rows: \"3\",\n        placeholder: \"What happened?\",\n        \"aria-label\": \"some description texts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"formGroupExampleInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Tags\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"tags\",\n        value: this.state.tags,\n        onChange: function onChange(event) {\n          _this5.handleChange(event);\n        },\n        id: \"formGroupExampleInput\",\n        placeholder: \"Tags for your bottle\",\n        \"aria-label\": \"Tags for your bottle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-primary mr-2\",\n        onClick: function onClick() {\n          return _this5.postBottle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Post\"), React.createElement(\"button\", {\n        className: \"btn btn-primary mr-2\",\n        onClick: function onClick() {\n          return _this5.saveBottle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        className: \"btn btn-primary mr-2\",\n        onClick: function onClick() {\n          return _this5.disposeBottle();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Dispose\"));\n    }\n  }]);\n\n  return ForumSubmission;\n}(Component);\n\nexport { ForumSubmission as default };","map":{"version":3,"sources":["/Users/-balder/drifting/src/ForumSubmission.js"],"names":["React","Component","Button","Form","FormControl","ForumSubmission","props","state","mood","body","type","tags","event","field","target","name","value","console","log","change","setState","bottle","addBottle","clearState","handleChange","postBottle","saveBottle","disposeBottle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { Button, Form, FormControl } from 'react-bootstrap';\n\nexport default class ForumSubmission extends Component {\n    // Set up a blank title and description input field\n    constructor(props) {\n        super(props);\n        this.state = {\n            mood: \"\",\n            body: \"\",\n            type: \"\",\n            tags: \"\"\n        };    \n        //this.handleChange = this.handleChange.bind(this);\n        //this.postBottle = this.postBottle.bind(this);\n    }\n\n    // Add a method to handle changes to any input element\n    handleChange(event) {\n        let field = event.target.name;\n        let value = event.target.value;\n        console.log(field, value);\n        let change = {};\n        change[field] = value;\n        this.setState(change);\n    }\n\n    // When the user click submit, the value change on title and description \n    //onSubmit = e => {\n    //    e.preventDefault();\n    //    this.props.onSubmit(this.state);\n    //    this.setState({\n    //        title: \"\",\n    //        description: \"\"\n    //    })\n    //};\n\n    addBottle() {\n        console.log(this.state.type);\n        let bottle = {\n            mood: this.state.mood,\n            body: this.state.body,\n            type: this.state.type,\n            tags: this.state.tags,\n                \n        }\n        console.log(\"bottle\", bottle);\n        //this.cardsRef.push(card);\n        this.setState({\n            mood: \"\",\n            body: \"\",\n            type: \"\",\n            tags: \"\"}, () => {\n            console.log(\"empty1\", this.state);\n        });\n        \n    }\n\n    clearState() {\n        this.setState({\n            mood: \"\",\n            body: \"\",\n            type: \"\",\n            tags: \"\"}, () => {\n            console.log(\"empty\", this.state);\n        });\n        \n    }\n\n    postBottle() {\n        //this.setState({type: \"public\"});\n        this.setState({\n            mood: \"aaaaa\",\n            type: \"public\"}, () => {\n            console.log(\"post\", this.state);\n        });\n        this.addBottle();\n        this.clearState();\n    }\n\n    saveBottle() {\n        this.setState({type: \"private\"});\n        console.log(this.state.type);\n        this.addBottle();\n        this.clearState();\n    }\n\n    disposeBottle() {\n        this.clearState();\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"intro\">\n                    <h1>Create a New Bottle</h1>\n                    <h2>How are you feeling right now?</h2>\n                </div>\n                <form>\n                    <div className=\"radio\">\n                        <label>\n                            <input type=\"radio\" \n                                name=\"mood\"\n                                value=\"happy\"\n                                checked={this.state.mood===\"happy\"}\n                                onChange={(event) => { this.handleChange(event) }}\n                            />\n                        Happy\n                        </label>\n                    </div>\n                    <div className=\"radio\">\n                        <label>\n                            <input type=\"radio\" \n                                name=\"mood\"\n                                value=\"bad\"\n                                checked={this.state.mood===\"bad\"}\n                                onChange={(event) => { this.handleChange(event) }}\n                            />\n                        Bad\n                        </label>\n                    </div>\n                    <div className=\"radio\">\n                        <label>\n                            <input type=\"radio\" \n                                name=\"mood\"\n                                value=\"awful\"\n                                checked={this.state.mood===\"awful\"}\n                                onChange={(event) => { this.handleChange(event) }}\n                            />\n                        Awful\n                        </label>\n                    </div>\n\n                    <div className=\"form-group\">\n                      <label htmlFor=\"exampleFormControlTextarea1\">Emotional Processing</label>\n                      <textarea className=\"form-control\"\n                        name=\"body\"\n                        value={this.state.body}\n                        onChange={(event) => { this.handleChange(event) }} \n                        id=\"exampleFormControlTextarea1\" \n                        rows=\"3\"\n                        placeholder=\"What happened?\"\n                        aria-label=\"some description texts\">\n                      </textarea>\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"formGroupExampleInput\">Tags</label>\n                      <input type=\"text\" className=\"form-control\" \n                        name=\"tags\"\n                        value={this.state.tags}\n                        onChange={(event) => { this.handleChange(event) }}\n                        id=\"formGroupExampleInput\" \n                        placeholder=\"Tags for your bottle\"\n                        aria-label=\"Tags for your bottle\"\n                      />\n                    </div>\n                </form>\n                <button className=\"btn btn-primary mr-2\" onClick={() => this.postBottle()}>\n                    Post\n                </button>\n                <button className=\"btn btn-primary mr-2\" onClick={() => this.saveBottle()}>\n                    Save\n                </button>\n                <button className=\"btn btn-primary mr-2\" onClick={() => this.disposeBottle()}>\n                    Dispose\n                </button>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}